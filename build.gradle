buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'idea'

defaultTasks 'fullBuild'

idea {
    module {
        // For some reason this is necessary for IDEA 2014 workspaces to recognize assets
        inheritOutputDirs = true
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

repositories {
    maven {
        name 'ForgeFS'
        url 'http://files.minecraftforge.net/maven'
    }
    maven {
        name 'amadornes'
        url 'http://maven.amadornes.com/'
    }
    maven {
        name 'prog'
        url 'http://dvs1.progwml6.com/files/maven'
    }
    maven {
        name 'tesla'
        url 'http://maven.mcmoddev.com'
    }
    maven {
        name 'curseforge'
        url 'https://minecraft.curseforge.com/api/maven/'
    }
    maven {
        name 'opencomputers'
        url 'http://maven.cil.li/'
    }
    maven {
        name 'hwyla'
        url 'http://tehnut.info/maven'
    }
    maven {
        name 'CoFH Maven'
        url = 'http://maven.covers1624.net'
    }
    maven {
        name 'buildcraft'
        url 'https://mod-buildcraft.com/maven/'
    }
    maven {
        name 'tterrag'
        url 'http://maven.tterrag.com/'
    }
    maven {
        name 'ic2'
        url 'http://maven.ic2.player.to'
    }
    maven {
        name 'BlameJared - Crafttweaker'
        url 'http://maven.blamejared.com/'
    }
    maven {
        name 'thiakil'
        url 'http://maven.thiakil.com'
    }
}

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // Load config. It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

group = "mekanica"
version = "${config.minecraft_version}-${version}"
archivesBaseName = "mekanica-all"
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    mappings = "${config.mappings_version}"
    runDir = "run"
    useDepAts = true

    replace '${version}', project.version
    replaceIn "Mekanism.java"
}

dependencies {
    deobfCompile "MCMultiPart2:MCMultiPart:${config.mcmp_version}"
    compileOnly "mezz.jei:jei_1.12.2:${config.jei_version}:api"
    runtime "mezz.jei:jei_1.12.2:${config.jei_version}"
    compileOnly "net.darkhax.tesla:Tesla-1.12:${config.tesla_version}"
    compileOnly "inventory-tweaks:InventoryTweaks:${config.invtweak_version}:api"
    compileOnly "li.cil.oc:OpenComputers:MC1.11.2-${config.opencomputers_version}:api" // Not updated yet
    deobfCompile "mcp.mobius.waila:Hwyla:${config.hwyla_version}"
    deobfCompile "cofh:RedstoneFlux:1.12-${config.redstoneflux_version}:universal"
    compileOnly "com.mod-buildcraft:buildcraft-api:${config.buildcraft_version}"
    compileOnly "team.chisel.ctm:CTM:MC1.12-${config.ctm_version}:api"
    runtime "team.chisel.ctm:CTM:MC1.12-${config.ctm_version}"
    compileOnly "net.industrial-craft:industrialcraft-2:${config.ic2_version}:api"
    compileOnly ("CraftTweaker2:CraftTweaker2-API:${config.crafttweaker_version}") {
        exclude module: "asm-debug-all"
    }
    deobfCompile ("CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-${config.crafttweaker_version}") {
        exclude module: "asm-debug-all"
    }
    compileOnly "dan200.computercraft:ComputerCraft:${config.computercraft_version}:api"
    compileOnly "mcjty.theoneprobe:TheOneProbe-1.12:${config.top_version}:api"
    compileOnly "appeng:appliedenergistics2:${config.ae2_version}:api"
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mc_version", config.minecraft_version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mc_version": config.minecraft_version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude '**/*.blend*'
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}

jar {
    manifest {
        attributes 'FMLAT': 'mekanism_at.cfg'
    }
}

task coreJar(type: Jar) {
	archiveName = "mekanica-${project.version}.jar"
	dependsOn 'reobfJar'
	classifier "core"

    from('etc/core') {
        include '*.info'
        expand 'version':project.version, 'mc_version':config.minecraft_version, 'mcmp_version':config.mcmp_version
    }

    from zipTree(jar.outputs.getFiles().getSingleFile()).matching {
        exclude 'mekanism/tools/**', 'mekanism/generators/**', 'assets/mekanismtools/**', 'assets/mekanismgenerators/**', 'mcmod.info'
    }

    manifest {
        attributes 'FMLAT': 'mekanism_at.cfg'
    }
}

task toolsJar(type: Jar) {
	archiveName = "mekanica-tools-${project.version}.jar"
	dependsOn 'reobfJar'
	classifier "tools"

    from('etc/tools') {
        include '*.info'
        expand 'version':project.version, 'mc_version':config.minecraft_version, 'mcmp_version':config.mcmp_version
    }

    from zipTree(jar.outputs.getFiles().getSingleFile()).matching {
        include 'mekanism/tools/**', 'assets/mekanismtools/**'
    }
}

task generatorsJar(type: Jar) {
	archiveName = "mekanica-generators-${project.version}.jar"
	dependsOn 'reobfJar'
	classifier "generators"

    from('etc/generators') {
        include '*.info'
        expand 'version':project.version,'mc_version':config.minecraft_version,'mcmp_version':config.mcmp_version
    }

    from zipTree(jar.outputs.getFiles().getSingleFile()).matching {
        include 'mekanism/generators/**', 'assets/mekanismgenerators/**'
    }
}

task apiJar(type: Jar) {
    classifier "api"
    baseName "mekanica"
    dependsOn "sourceMainJava"
    include 'mekanism/api/**'
    from sourceSets.main.java.srcDirs
    from sourceSets.main.output
}

artifacts {
    archives apiJar
    archives coreJar
    archives toolsJar
    archives generatorsJar
}

task fullBuild(type: Delete) {
    delete jar
    dependsOn "build"
}

apply plugin: 'maven'
apply plugin: 'maven-publish'

